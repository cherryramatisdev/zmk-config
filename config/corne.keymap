/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hold_or_tap: hold_or_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_OR_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q                    &kp W                    &kp E                    &kp R                      &kp T                          &kp Y                         &kp U                       &kp I                     &kp O                     &kp P     &kp BSPC
&kp ESCAPE  &hold_or_tap LEFT_GUI A  &hold_or_tap LEFT_GUI S  &hold_or_tap LEFT_ALT D  &hold_or_tap LEFT_SHIFT F  &hold_or_tap LEFT_CONTROL G    &hold_or_tap RIGHT_CONTROL H  &hold_or_tap RIGHT_SHIFT J  &hold_or_tap RIGHT_ALT K  &hold_or_tap RIGHT_GUI L  &kp SEMI  &kp SQT
&mo 1       &kp Z                    &kp X                    &kp C                    &kp V                      &kp B                          &kp N                         &kp M                       &kp COMMA                 &kp DOT                   &kp FSLH  &mo 2
                                                              &kp LGUI                 &mo 1                      &kp SPACE                      &kp RET                       &mo 2                       &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1  &kp N2          &kp N3          &kp N4        &kp N5             &kp N6          &kp N7        &kp N8    &kp N9     &kp N0     &kp BSPC
&kp ESCAPE  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT    &kp LEFT        &kp DOWN      &kp UP    &kp RIGHT  &mkp LCLK  &trans
&mo 1       &trans  &trans          &trans          &trans        &trans             &msc SCRL_DOWN  &msc SCRL_UP  &trans    &trans     &mkp RCLK  &mo 2
                                    &kp LGUI        &trans        &kp SPACE          &kp RET         &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp EXCL       &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp ASTERISK  &kp AT_SIGN  &kp HASH       &kp DOLLAR  &kp TILDE  &kp BSPC
&kp ESCAPE  &kp BACKSLASH  &trans         &kp QUESTION      &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp MINUS     &kp EQUAL    &kp PERCENT    &kp CARET   &kp BSLH   &kp GRAVE
&mo 1       &kp PIPE       &trans         &trans            &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp UNDER     &kp PLUS     &kp AMPERSAND  &trans      &kp PIPE   &mo 2
                                          &kp LGUI          &trans                &kp SPACE                &kp RET       &trans       &kp RALT
            >;
        };
    };
};
